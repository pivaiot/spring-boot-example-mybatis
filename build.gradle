buildscript {
    ext {
        springBootVersion = '2.0.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.pivaiot'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// 依赖库的版本
ext {
  springFoxVersion = '2.9.2'
  commonVersion = '2.0.2'
  mybatisSpringBootVersion = '1.3.2'
}

// 所有的项目(包括子项目)的依赖版本管理
// 这样在子项目中就不需要指定依赖版本
allprojects {

  repositories {
    mavenLocal()
    maven { url 'https://jitpack.io' }
    mavenCentral()
  }

  dependencyManagement {
    dependencies {
      dependency "io.springfox:springfox-swagger2:$springFoxVersion"
      dependency "io.springfox:springfox-swagger-ui:$springFoxVersion"
      dependency "com.github.pivaiot.common:common-lang:$commonVersion"
      dependency "com.github.pivaiot.common:common-db-mybatis:$commonVersion"
      dependency "org.mybatis.spring.boot:mybatis-spring-boot:$mybatisSpringBootVersion"
    }
  }
}

// 当前项目的依赖
dependencies {
  // Util
  implementation('com.github.pivaiot.common:common-lang')
  implementation('com.github.pivaiot.common:common-db-mybatis')
  compileOnly('org.projectlombok:lombok')
  // 可以启用热更新
  //runtimeOnly('org.springframework.boot:spring-boot-devtools')

  // Metric
  implementation('org.springframework.boot:spring-boot-starter-actuator')

  // Database
  implementation('org.springframework.boot:spring-boot-starter-jdbc')
  compile('org.mybatis.spring.boot:mybatis-spring-boot')
  runtimeOnly('mysql:mysql-connector-java')

  // Cache
  //implementation('org.springframework.boot:spring-boot-starter-data-redis')

  // Web
  //implementation('org.springframework.boot:spring-boot-starter-security')
  implementation('org.springframework.boot:spring-boot-starter-web')

  // Session
  //implementation('org.springframework.session:spring-session-data-redis')

  // RESTful API Doc
  implementation("io.springfox:springfox-swagger2")
  implementation("io.springfox:springfox-swagger-ui")

  // Test
  testImplementation('org.springframework.boot:spring-boot-starter-test')

}

task mybatisGenerate << {
  ant.taskdef(
    name: 'mbgenerator',
    classname: 'org.mybatis.generator.ant.GeneratorAntTask',
    classpath: configurations.mybatisGenerator.asPath)
  ant.mbgenerator(
    overwrite: true,
    configfile: 'src/main/resources/mbg.xml',
    verbose: true)
}
